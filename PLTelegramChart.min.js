class PLTelegramChart{constructor(t){this.defaults={color:"#333",exceptionKeys:["x"],months:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],canvas:{width:400,height:400,darkMode:!1,controlsWidth:4}},this.canvas=t.chart||this.defaults.canvas,this.index=t.index,this.points={},this.formatData(t.data),this.parentElementId=t.parentElementId,this.checkBoxes=Object.keys(this.data),this.lastX=0;let e=this.canvas.width,n=2*this.canvas.controlsWidth/e;this.strategies={},this.strategies[`rightSubControl_${this.index}`]=(t=>{let e=this.crossEventX(t);this.markers.start<this.markers.end-2*n?this.decreaseWidth(`rightControl_${this.index}`,e):e<0?this.markers.start>0&&(this.decreaseWidth(`rightControl_${this.index}`,e),this.increaseWidth(`leftControl_${this.index}`,e)):this.decreaseWidth(`rightControl_${this.index}`,e)}),this.strategies[`leftSubControl_${this.index}`]=(t=>{let e=this.crossEventX(t);this.markers.start<this.markers.end-2*n?this.increaseWidth(`leftControl_${this.index}`,e):e>0?this.markers.end<1&&(this.decreaseWidth(`rightControl_${this.index}`,e),this.increaseWidth(`leftControl_${this.index}`,e)):this.increaseWidth(`leftControl_${this.index}`,e)}),this.strategies[`container_${this.index}`]=(t=>{let e=this.crossEventX(t);(this.markers.start-n/6>0&&e<0||this.markers.end+n/6<1&&e>0)&&(this.increaseWidth(`leftControl_${this.index}`,e),this.decreaseWidth(`rightControl_${this.index}`,e))}),this._markers={start:0,end:1},this.excludedKeys=[],Object.defineProperty(this.excludedKeys,"push",{enumerable:!1,value:t=>{Array.prototype.push.apply(this.excludedKeys,[t]),this.drawChart(),this.drawBackground(),this.showPoint()}}),Object.defineProperty(this.excludedKeys,"splice",{enumerable:!1,value:(t,e)=>{Array.prototype.splice.apply(this.excludedKeys,[t,e]),this.drawChart(),this.drawBackground(),this.showPoint()}})}set markers(t){this._markers=t,this.drawChart()}get markers(){return this._markers}set darkMode(t){this.canvas.darkMode=t,this.setStyles(),this.drawBackground(),this.drawChart(),this.drawDates()}get darkMode(){return this.canvas.darkMode}crossEventX(t){let e=t.movementX;return e||0===e||(this.lastX?(e=t.changedTouches[0].clientX-this.lastX,this.lastX=t.changedTouches[0].clientX):this.lastX=t.changedTouches[0].clientX),e}formatData(t){let e={};t.columns.map(n=>{let i=n.splice(0,1)[0];e[i]={data:n,color:t.colors[i]||this.defaults.color,type:t.types[i]}}),this.data=e}getCheckBoxesTemplate(){let t="";return this.checkBoxes.map(e=>{this.defaults.exceptionKeys.includes(e)||(t+=`<style>\n  #checkbox_${e}_${this.index}:checked + label {\n background-color: ${this.data[e].color};\n border-color: ${this.data[e].color};\n  }\n  </style>\n  <div class="round">\n <input id="checkbox_${e}_${this.index}" type="checkbox" checked="${!this.excludedKeys.includes(e)}">\n <label for="checkbox_${e}_${this.index}"></label>\n <span>${e}</span>\n  </div>`)}),t}getStyles(){return`<style id="style_${this.index}">\n  #chart_${this.index} {\n border-top-left-radius: 18px;\n border-top-right-radius: 18px;\n  }\n  #Chart_${this.index}.chart {\n margin: 20px 0;\n width: ${this.canvas.width}px;\n background-color: ${this.canvas.darkMode?"#111":"#fff"};\n padding: 20px;\n border-radius: 20px;\n  }\n  #Chart_${this.index} .range {\n height: 40px;\n background: ${this.canvas.darkMode?"#111":"#fff"};\n cursor: move;\n border: 1px solid ${this.canvas.darkMode?"#bbb":"#444"};\n  }\n  #Chart_${this.index} .leftControl {\n height: 40px;\n background-color: ${this.canvas.darkMode?"#333":"#ccc"};\n opacity: 0.75;\n float: left;\n cursor: auto;\n text-align: center;\n font-size: 10px;\n font-weight: bold;\n color: ${this.canvas.darkMode?"#eee":"#111"};\n line-height: 40px;\n  }\n  #Chart_${this.index} .leftSubControl {\n width: ${this.canvas.controlsWidth}px;\n height: 40px;\n background-color: ${this.canvas.darkMode?"#bbb":"#444"};\n opacity: 0.95;\n float: left;\n cursor: w-resize;\n z-index: 999;\n  }\n  #Chart_${this.index} .rightControl {\n height: 40px;\n background-color: ${this.canvas.darkMode?"#333":"#ccc"};\n opacity: 0.75;\n float: right;\n cursor: auto;\n text-align: center;\n font-size: 10px;\n font-weight: bold;\n color: ${this.canvas.darkMode?"#eee":"#111"};\n line-height: 40px;\n  }\n  #Chart_${this.index} .rightSubControl {\n width: ${this.canvas.controlsWidth}px;\n height: 40px;\n background-color: ${this.canvas.darkMode?"#bbb":"#444"};\n opacity: 0.95;\n float: right;\n cursor: e-resize;\n z-index: 999;\n  }\n  #Chart_${this.index} .canvas {\n border: 1px solid ${this.canvas.darkMode?"#bbb":"#444"};\n  }\n  #Chart_${this.index} .round {\n position: relative;\n display: inline-block;\n width: auto;\n border-radius: 20px;\n border: 1px solid ${this.canvas.darkMode?"#333":"#ccc"};\n padding: 10px;\n height: 24px;\n  }\n  #Chart_${this.index} .checkboxHolder {\n margin-top: 18px;\n  }\n\n  #Chart_${this.index} .round label {\n background-color: ${this.canvas.darkMode?"#111":"#fff"};\n border: 1px solid ${this.canvas.darkMode?"#333":"#ccc"};\n border-radius: 50%;\n cursor: pointer;\n height: 28px;\n left: 7px;\n position: absolute;\n top: 7px;\n width: 28px;\n  }\n\n  #Chart_${this.index} .round label:after {\n border: 2px solid ${this.canvas.darkMode?"#fff":"#111"};\n border-top: none;\n border-right: none;\n content: "";\n height: 6px;\n left: 7px;\n opacity: 0;\n position: absolute;\n top: 8px;\n transform: rotate(-45deg);\n width: 12px;\n  }\n\n  #Chart_${this.index} .round input[type="checkbox"] {\n visibility: hidden;\n  }\n\n  #Chart_${this.index} .round input[type="checkbox"]:checked + label:after {\n opacity: 1;\n  }\n\n   #Chart_${this.index} .round span {\n display: inline-block;\n min-width: 40px;\n margin-left: 10px;\n line-height: 24px;\n color: ${this.canvas.darkMode?"#eee":"#333"}\n  }  \n   #Chart_${this.index} #switcher_${this.index} {\n float: right;\n  } \n  #Chart_${this.index} #dates_holder_${this.index} {\n width: ${this.canvas.width}px;\n height: 20px; \n cursor: pointer;   \n\n  }   \n  #Chart_${this.index} #pointShower_${this.index} {\n position: absolute;\n background: ${this.canvas.darkMode?"#333":"#eee"};\n border-radius: 10px;\n border: 1px solid ${this.canvas.darkMode?"#eee":"#333"};\n width: 60px;\n padding: 10px;\n  }  \n  #pointShower_${this.index} .date {\n font-weight: bold;\n color: ${this.canvas.darkMode?"#eee":"#333"}\n  }\n </style>`}setStyles(){let t=document.getElementById(this.parentElementId),e=document.getElementById(`style_${this.index}`);t&&(this.styles=document.createElement("template"),this.styles.innerHTML=this.getStyles(),e?t.replaceChild(this.styles.content,e):t.appendChild(this.styles.content))}getTemplate(){return`<div class="chart" id="Chart_${this.index}">\n  <canvas class="canvas" width="${this.canvas.width}" height="${this.canvas.height}" id="chart_${this.index}"></canvas>\n  <div id="dates_holder_${this.index}"></div>\n  <div class="range" id="container_${this.index}" style="width: ${this.canvas.width}px;">\n <div class="leftControl" id="leftControl_${this.index}" style="width: ${Math.round(this.canvas.width/4)}px;"></div>\n <div class="leftSubControl" id="leftSubControl_${this.index}"></div>\n <div class="rightControl" id="rightControl_${this.index}" style="width: ${Math.round(this.canvas.width/4)}px;"></div>\n <div class="rightSubControl" id="rightSubControl_${this.index}"></div>\n  </div>\n  <div id="pointShower_${this.index}" draggable="true"></div>\n  <div class="checkboxHolder">\n  ${this.getCheckBoxesTemplate()}\n  <div class="round" id="switcher_${this.index}">\n   <input id="checkbox_mode_${this.index}" type="checkbox" checked="${this.darkMode}">\n  <label for="checkbox_mode_${this.index}"></label>\n  <span>DarkMode</span>\n </div>\n  </div>\n </div>`}decreaseWidth(t,e){let n=document.getElementById(t);if(n){let t=n.style.width||120;n.style.width=parseInt(t,10)-e+"px"}this.calculate()}increaseWidth(t,e){let n=document.getElementById(t);if(n){let t=n.style.width||120;n.style.width=parseInt(t,10)+e+"px"}this.calculate()}calculate(){let t=document.getElementById(`rightControl_${this.index}`),e=document.getElementById(`leftControl_${this.index}`),n=document.getElementById(`container_${this.index}`),i=parseInt(n.style.width,10),s=parseInt(e.style.width,10)/i,a=(i-parseInt(t.style.width,10))/i;this.showPoint(),this.markers={start:s,end:a}}getStrategy(t){let e=t.getAttribute("id");return this.strategies[e]}drawDates(){let t=document.getElementById(`dates_holder_${this.index}`),e=document.createElement("canvas"),{start:n,end:i}=this.markers,s=Math.round(n*this.data.x.data.length),a=Math.round(i*this.data.x.data.length),d=this.data.x.data,h=this.canvas.width/(a-s),r=h*d.length;e.height=20,e.width=r;let o=e.getContext("2d");o.clearRect(0,0,e.width,e.height),this.canvas.darkMode&&(o.fillStyle="#111",o.fillRect(0,0,e.width,e.height)),o.fillStyle=this.canvas.darkMode?"#eee":"#333";let l=d.length,c=a-s,u=Math.round(2*e.height/3);for(let t=0;t<l;t++)if(t>=s&&t<=a){let e=Math.round(this.canvas.width/40);if(c>e&&!(t%Math.ceil(c/e))||c<=e){let e=new Date(d[t]);o.fillText(`${e.getDate()} ${this.defaults.months[e.getMonth()]}`,h*t,u)}}t.style.background=`url(${e.toDataURL()})`,t.style["background-position"]=`left ${e.width*(1-n)}px top`;let p=document.getElementById(`leftControl_${this.index}`);p.innerText="",parseInt(p.style.width,10)>=70&&(p.innerText=`from ${new Date(d[s]).getDate()} ${this.defaults.months[new Date(d[s]).getMonth()]}`);let x=document.getElementById(`rightControl_${this.index}`);x.innerText="",parseInt(x.style.width,10)>=70&&(x.innerText=`to ${new Date(d[a]).getDate()} ${this.defaults.months[new Date(d[a]).getMonth()]}`)}drawChart(){let t=document.getElementById(`chart_${this.index}`),e=t.getContext("2d");e.clearRect(0,0,t.width,t.height);let n=[],i=[],s=Math.round(t.height/5);for(let t in this.data)if(!this.defaults.exceptionKeys.includes(t)&&!this.excludedKeys.includes(t)){let e=Math.max.apply(null,this.data[t].data),s=Math.min.apply(null,this.data[t].data);n.push(e),i.push(s)}let a=Math.max.apply(null,n),d=Math.min.apply(null,i);for(let n=0;n<t.height;n+=s)e.strokeStyle=this.canvas.darkMode?"#333":"#eee",e.lineWidth=1,e.beginPath(),e.moveTo(0,t.height-n),e.lineTo(t.width,t.height-n),e.stroke(),e.closePath(),e.moveTo(0,t.height-n);if(Object.keys(this.data).length>this.excludedKeys.length+this.defaults.exceptionKeys.length){for(let n in this.data)if(!this.defaults.exceptionKeys.includes(n)&&!this.excludedKeys.includes(n)){let i=t.height/(a-d)*.9,{start:s,end:h}=this.markers;s=Math.round(s*this.data[n].data.length),h=Math.round(h*this.data[n].data.length);let r=[],o=this.data[n].data.slice(s,h),l=this.data.x.data.slice(s,h),c=t.width/l.length;for(let e=0;e<o.length;e++){let n={x:e===o.length-1?t.width:Math.round(c*e),y:t.height-Math.round(i*(o[e]-d))};r.push(n)}e.strokeStyle=this.data[n].color,e.lineWidth=1,e.moveTo(r[0].x,r[0].y),e.beginPath(),r.map(t=>{e.lineTo(t.x,t.y),e.stroke()}),e.closePath(),this.points[n]=r}for(let n=1;n<t.height;n+=s)e.fillStyle=this.canvas.darkMode?"#eee":"#333",e.fillText(Math.round(a*(n+s)/t.height).toString(),20,t.height-n-s/2)}this.drawDates()}getPointTemplate(t){console.log({data:t},this.data);let e="<div>";for(let n in t)switch(n){case"left":case"top":break;case"x":let i=new Date(t[n]);e+=`<div class="date">${i.getDate()} ${this.defaults.months[i.getMonth()]}</div>`;break;default:e+=`<div style="color: ${this.data[n].color}">${t[n]}</div>`}return e+="</div>"}showPoint(t){let e=document.getElementById(`pointShower_${this.index}`);if(t){e.style.left=t.left+"px",e.style.top=t.top+"px";let n=document.createElement("template");n.innerHTML=this.getPointTemplate(t),e.innerHTML="",e.append(n.content),e.style.display="block"}else e.innerHTML="",e.style.display="none"}drawBackground(){let t=document.createElement("canvas");t.width=this.canvas.width,t.height=40;let e=t.getContext("2d");e.clearRect(0,0,t.width,t.height);let n=[],i=[];if(Object.keys(this.data).length>this.excludedKeys.length+this.defaults.exceptionKeys.length){for(let t in this.data)if(!this.defaults.exceptionKeys.includes(t)&&!this.excludedKeys.includes(t)){let e=Math.max.apply(null,this.data[t].data),s=Math.min.apply(null,this.data[t].data);n.push(e),i.push(s)}for(let s in this.data)if(!this.defaults.exceptionKeys.includes(s)&&!this.excludedKeys.includes(s)){let a=Math.max.apply(null,n),d=Math.min.apply(null,i),h=t.height/(a-d)*.9,r=[],o=this.data[s].data,l=this.data.x.data,c=t.width/l.length;for(let e=0;e<o.length;e++){let n={x:Math.round(c*e),y:t.height-Math.round(h*(o[e]-d))};r.push(n)}e.strokeStyle=this.data[s].color,e.lineWidth=1,e.beginPath(),e.moveTo(r[0].x,r[0].y),r.map(t=>{e.lineTo(t.x,t.y),e.stroke()}),e.closePath()}}document.getElementById(`container_${this.index}`).style.background=`url(${t.toDataURL()})`}initEvents(){let t=document.getElementById(`container_${this.index}`),e=this;t.addEventListener("mousedown",function(n){n.preventDefault();let i=e.getStrategy(n.target);i&&(t.addEventListener("mousemove",i),t.addEventListener("mouseup",e=>{t.removeEventListener("mousemove",i)}),t.addEventListener("mouseleave",e=>{t.removeEventListener("mousemove",i)}))}),t.addEventListener("touchstart",function(n){n.preventDefault();let i=e.getStrategy(n.target);i&&(t.addEventListener("touchmove",i),t.addEventListener("touchend",e=>{t.removeEventListener("touchmove",i)}))}),this.checkBoxes.map(t=>{let n=document.getElementById(`checkbox_${t}_${this.index}`);if(n){let i=!0;n.addEventListener("change",function(n){i?e.excludedKeys.push(t):e.excludedKeys.splice(e.excludedKeys.indexOf(t),1),i=!i})}}),document.getElementById(`checkbox_mode_${this.index}`).addEventListener("change",function(t){e.darkMode=!e.darkMode,this.setAttribute("checked",e.darkMode.toString())});let n=document.getElementById(`chart_${this.index}`);n.addEventListener("mousemove",function(t){let e=n.getContext("2d").getImageData(t.offsetX,t.offsetY,1,1).data;e="#"+("0"+parseInt(e[1],10).toString(16)).slice(-2)+("0"+parseInt(e[2],10).toString(16)).slice(-2)+("0"+parseInt(e[3],10).toString(16)).slice(-2),n.style.cursor="#000000"!==e&&"#ffffff"!==e?"pointer":"default"}),n.addEventListener("click",function(t){if("pointer"===n.style.cursor){let i=t.clientX-n.offsetLeft,s=t.offsetY+n.offsetTop,{start:a,end:d}=e.markers,h=i/n.width*(d-a)+a,r={left:i,top:s},o=Math.round(e.data.x.data.length*h);for(let t in e.data)e.excludedKeys.includes(t)||(r[t]=e.data[t].data[o]);e.currentPoint=r,e.showPoint(r)}else e.showPoint()})}render(){let t=document.getElementById(this.parentElementId);t&&(this.template=document.createElement("template"),this.template.innerHTML=this.getTemplate(),this.setStyles(),t.appendChild(this.template.content),this.calculate(),this.initEvents(),this.drawBackground())}static factory(t,e){t.map((t,n)=>new PLTelegramChart({index:n,parentElementId:e.parentElementId,data:t,chart:{darkMode:e.chart.darkMode,width:e.chart.width,height:e.chart.height,controlsWidth:e.chart.controlsWidth}}).render())}}