class PLTelegramChart{constructor(t){this.defaults={color:"#333",exceptionKeys:["x"],months:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],days:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],canvas:{width:600,height:400,darkMode:!1,controlsWidth:6}},this.formatData(t.data),this.chart=t.chart||this.defaults.canvas,this.index=t.index||0,this.touches=[],this.points={},this.parentElementId=t.parentElementId,this.checkBoxes=Object.keys(this.data),this.excludedKeys=[],this._markers={start:0,end:1},this.chartYData={max:1,min:0},this.setStrategies(),this.overrideMethodsForExcludedKeys()}set markers(t){this._markers=t,this.drawChart()}get markers(){return this._markers}set darkMode(t){this.chart.darkMode=t,this.setStyles(),this.drawBackground(),this.drawChart()}get darkMode(){return this.chart.darkMode}overrideMethodsForExcludedKeys(){Object.defineProperty(this.excludedKeys,"push",{enumerable:!1,value:t=>{Array.prototype.push.apply(this.excludedKeys,[t]),this.drawChart(),this.drawBackground(),this.showPoint()}}),Object.defineProperty(this.excludedKeys,"splice",{enumerable:!1,value:(t,e)=>{Array.prototype.splice.apply(this.excludedKeys,[t,e]),this.drawChart(),this.drawBackground(),this.showPoint()}})}setStrategies(){let t=this.chart.width,e=2*this.chart.controlsWidth/t;this.strategies={},this.strategies[`rightSubControl_${this.index}`]=(t=>{let i=this.getXAcrossEvents(t);this.markers.start<this.markers.end-2*e?this.decreaseWidth(`rightControl_${this.index}`,i):i<0?this.markers.start>0&&Math.abs(i)<e&&(this.decreaseWidth(`rightControl_${this.index}`,i),this.increaseWidth(`leftControl_${this.index}`,i)):this.decreaseWidth(`rightControl_${this.index}`,i)}),this.strategies[`leftSubControl_${this.index}`]=(t=>{let i=this.getXAcrossEvents(t);this.markers.start<this.markers.end-2*e?this.increaseWidth(`leftControl_${this.index}`,i):i>0?this.markers.end<1&&i<e&&(this.decreaseWidth(`rightControl_${this.index}`,i),this.increaseWidth(`leftControl_${this.index}`,i)):this.increaseWidth(`leftControl_${this.index}`,i)}),this.strategies[`range_${this.index}`]=(t=>{let i=this.getXAcrossEvents(t);(this.markers.start-e/6>0&&i<0||this.markers.end+e/6<1&&i>0)&&(this.increaseWidth(`leftControl_${this.index}`,i),this.decreaseWidth(`rightControl_${this.index}`,i))})}getStrategy(t){let e=t.getAttribute("id");return this.strategies[e]}getXAcrossEvents(t){let e=t.movementX;if(!e&&0!==e){let t=event.touches[0]||event.changedTouches[0];e=this.x?t.clientX-this.x:0,this.x=t.clientX}return e}formatData(t){let e={};t.columns.map(i=>{let h=i.splice(0,1)[0];e[h]={data:i,color:t.colors[h]||this.defaults.color,type:t.types[h]}}),this.data=e}getCheckBoxesTemplate(){let t="";return this.checkBoxes.map(e=>{this.defaults.exceptionKeys.includes(e)||(t+=`<style> #checkbox_${e}_${this.index}:checked + label { background-color: ${this.data[e].color}; border-color: ${this.data[e].color}; } </style> <div class="round"> <input id="checkbox_${e}_${this.index}" type="checkbox" checked="${!this.excludedKeys.includes(e)}"> <label for="checkbox_${e}_${this.index}"></label> <span>${e}</span> </div>`)}),t}getStyles(){return`<style id="style_${this.index}"> #chart_${this.index} { border-top-left-radius: 18px; border-top-right-radius: 18px; } #Chart_${this.index}.chart { margin: 20px 0; width: ${this.chart.width}px; background-color: ${this.chart.darkMode?"#111":"#fff"}; padding: 20px; border-radius: 20px; } #Chart_${this.index} .range { height: 40px; background: ${this.chart.darkMode?"#111":"#fff"}; cursor: move; border: 1px solid ${this.chart.darkMode?"#bbb":"#444"}; } #Chart_${this.index} .leftControl { height: 40px; background-color: ${this.chart.darkMode?"#333":"#ccc"}; opacity: 0.75; float: left; cursor: auto; text-align: center; font-size: 10px; font-weight: bold; color: ${this.chart.darkMode?"#eee":"#111"}; line-height: 40px; } #Chart_${this.index} .leftSubControl { width: ${this.chart.controlsWidth}px; height: 40px; background-color: ${this.chart.darkMode?"#bbb":"#444"}; opacity: 0.95; float: left; cursor: w-resize; z-index: 999; } #Chart_${this.index} .rightControl { height: 40px; background-color: ${this.chart.darkMode?"#333":"#ccc"}; opacity: 0.75; float: right; cursor: auto; text-align: center; font-size: 10px; font-weight: bold; color: ${this.chart.darkMode?"#eee":"#111"}; line-height: 40px; } #Chart_${this.index} .rightSubControl { width: ${this.chart.controlsWidth}px; height: 40px; background-color: ${this.chart.darkMode?"#bbb":"#444"}; opacity: 0.95; float: right; cursor: e-resize; z-index: 999; } #Chart_${this.index} .canvas { border: 1px solid ${this.chart.darkMode?"#bbb":"#444"}; } #Chart_${this.index} .round { position: relative; display: inline-block; width: auto; border-radius: 20px; border: 1px solid ${this.chart.darkMode?"#333":"#ccc"}; padding: 10px; height: 24px; } #Chart_${this.index} .checkboxHolder { margin-top: 18px; } #Chart_${this.index} .round label { background-color: ${this.chart.darkMode?"#111":"#fff"}; border: 1px solid ${this.chart.darkMode?"#333":"#ccc"}; border-radius: 50%; cursor: pointer; height: 28px; left: 7px; position: absolute; top: 7px; width: 28px; } #Chart_${this.index} .round label:after { border: 2px solid ${this.chart.darkMode?"#fff":"#111"}; border-top: none; border-right: none; content: ""; height: 6px; left: 7px; opacity: 0; position: absolute; top: 8px; transform: rotate(-45deg); width: 12px; } #Chart_${this.index} .round input[type="checkbox"] { visibility: hidden; } #Chart_${this.index} .round input[type="checkbox"]:checked + label:after { opacity: 1; } #Chart_${this.index} .round span { display: inline-block; min-width: 40px; margin-left: 10px; line-height: 24px; color: ${this.chart.darkMode?"#eee":"#333"} } #Chart_${this.index} #switcher_${this.index} { float: right; } #Chart_${this.index} #dates_holder_${this.index} { width: ${this.chart.width}px; height: 20px; } #Chart_${this.index} #pointShower_${this.index} { position: absolute; background: ${this.chart.darkMode?"#333":"#eee"}; border-radius: 10px; border: 1px solid ${this.chart.darkMode?"#eee":"#333"}; width: 90px; padding: 10px; } #pointShower_${this.index} .date { font-weight: bold; color: ${this.chart.darkMode?"#eee":"#333"} } #pointShower_${this.index} .date { font-weight: bold; color: ${this.chart.darkMode?"#eee":"#333"} } #verticalLine_${this.index} { position: absolute; width: 1px; height: ${this.chart.height}px; margin-top: -${this.chart.height+66}px; background-color: ${this.chart.darkMode?"#eee":"#333"} } #pointsHolder_${this.index} { position: absolute; width: 8px; height: ${this.chart.height}px; margin-top: -${this.chart.height+66}px; } </style>`}setStyles(){let t=document.getElementById(this.parentElementId),e=document.getElementById(`style_${this.index}`);t&&(this.styles=document.createElement("template"),this.styles.innerHTML=this.getStyles(),e?t.replaceChild(this.styles.content,e):t.appendChild(this.styles.content))}getTemplate(){return`<div class="chart" id="Chart_${this.index}"> <canvas class="canvas" width="${this.chart.width}" height="${this.chart.height}" id="chart_${this.index}"></canvas> <div id="dates_holder_${this.index}"></div> <div class="range" id="range_${this.index}" style="width: ${this.chart.width}px;"> <div class="leftControl" id="leftControl_${this.index}" style="width: ${Math.round(this.chart.width/4)}px;"></div> <div class="leftSubControl" id="leftSubControl_${this.index}"></div> <div class="rightControl" id="rightControl_${this.index}" style="width: ${Math.round(this.chart.width/4)}px;"></div> <div class="rightSubControl" id="rightSubControl_${this.index}"></div> </div> <div id="verticalLine_${this.index}"></div> <div id="pointsHolder_${this.index}"></div> <div id="pointShower_${this.index}"></div> <div class="checkboxHolder"> ${this.getCheckBoxesTemplate()} <div class="round" id="switcher_${this.index}"> <input id="checkbox_mode_${this.index}" type="checkbox" checked="${this.darkMode}"> <label for="checkbox_mode_${this.index}"></label> <span>Dark mode</span> </div> </div> </div>`}getPointTemplate(t){let e="<div>";for(let i in t)switch(i){case"left":case"top":break;case"x":let h=new Date(t[i]);e+=`<div class="date">${this.defaults.days[h.getDay()]}, ${h.getDate()} ${this.defaults.months[h.getMonth()]}</div>`;break;default:e+=`<div style="color: ${this.data[i].color}">${t[i]}</div>`}return e+="</div>"}decreaseWidth(t,e){let i=document.getElementById(t);if(i){let t=i.style.width||120;i.style.width=parseInt(t,10)-e+"px"}this.calculate()}increaseWidth(t,e){let i=document.getElementById(t);if(i){let t=i.style.width||120;i.style.width=parseInt(t,10)+e+"px"}this.calculate()}calculate(){let t=document.getElementById(`rightControl_${this.index}`),e=document.getElementById(`leftControl_${this.index}`),i=document.getElementById(`range_${this.index}`),h=parseInt(i.style.width,10),s=parseInt(e.style.width,10)/h,d=(h-parseInt(t.style.width,10))/h;this.markers={start:s,end:d},this.showPoint()}drawDates(){let t=document.getElementById(`dates_holder_${this.index}`),e=document.createElement("canvas"),{start:i,end:h}=this.markers,s=Math.round(i*this.data.x.data.length),d=Math.round(h*this.data.x.data.length),a=this.data.x.data,n=this.chart.width/(d-s),r=n*a.length;e.height=20,e.width=r;let o=e.getContext("2d");o.clearRect(0,0,e.width,e.height),this.chart.darkMode&&(o.fillStyle="#111",o.fillRect(0,0,e.width,e.height)),o.fillStyle=this.chart.darkMode?"#eee":"#333";let l=a.length,c=d-s,p=Math.round(2*e.height/3);for(let t=0;t<l;t++)if(t>=s&&t<=d){let e=Math.round(this.chart.width/40);if(c>e&&!(t%Math.ceil(c/e))||c<=e){let e=new Date(a[t]);o.fillText(`${e.getDate()} ${this.defaults.months[e.getMonth()]}`,n*t,p)}}t.style.background=`url(${e.toDataURL()})`,t.style["background-position"]=`left ${e.width*(1-i)}px top`;let x=document.getElementById(`leftControl_${this.index}`);x.innerText="",parseInt(x.style.width,10)>=70&&(x.innerText=`from ${new Date(a[s]).getDate()} ${this.defaults.months[new Date(a[s]).getMonth()]}`);let u=document.getElementById(`rightControl_${this.index}`);u.innerText="",parseInt(u.style.width,10)>=70&&(u.innerText=`to ${new Date(a[d]).getDate()} ${this.defaults.months[new Date(a[d]).getMonth()]}`)}drawChart(){let t=document.getElementById(`chart_${this.index}`),e=t.getContext("2d");e.clearRect(0,0,t.width,t.height);let i=[],h=[],s=Math.round(t.height/5);for(let t in this.data)if(!this.defaults.exceptionKeys.includes(t)&&!this.excludedKeys.includes(t)){let e=Math.max.apply(null,this.data[t].data),s=Math.min.apply(null,this.data[t].data);i.push(e),h.push(s)}let d=Math.max.apply(null,i),a=Math.min.apply(null,h);this.chartYData={max:d,min:a};for(let i=0;i<t.height;i+=s)e.strokeStyle=this.chart.darkMode?"#333":"#eee",e.lineWidth=1,e.beginPath(),e.moveTo(0,t.height-i),e.lineTo(t.width,t.height-i),e.stroke(),e.closePath(),e.moveTo(0,t.height-i);if(Object.keys(this.data).length>this.excludedKeys.length+this.defaults.exceptionKeys.length){for(let i in this.data)if(!this.defaults.exceptionKeys.includes(i)&&!this.excludedKeys.includes(i)){let h=t.height/(d-a)*.9,{start:s,end:n}=this.markers;s=Math.round(s*this.data[i].data.length),n=Math.round(n*this.data[i].data.length);let r=[],o=this.data[i].data.slice(s,n),l=this.data.x.data.slice(s,n),c=t.width/l.length;for(let e=0;e<o.length;e++){let i={x:e===o.length-1?t.width:Math.round(c*e),y:t.height-Math.round(h*(o[e]-a))};r.push(i)}if(this.points[i]=r,e.strokeStyle=this.data[i].color,e.lineWidth=1,e.moveTo(r[0].x,r[0].y),e.beginPath(),r.length<31)for(let t=0;t<r.length;t++)e.lineTo(r[t].x-c/2,r[t].y),e.lineTo(r[t].x+c/2,r[t].y),e.stroke();else for(let t=0;t<r.length;t++)e.lineTo(r[t].x,r[t].y),e.stroke();e.closePath()}for(let i=1;i<t.height;i+=s)e.fillStyle=this.chart.darkMode?"#eee":"#333",e.fillText(Math.round(d*(i+s)/t.height).toString(),20,t.height-i-s+15)}this.drawDates()}showPoint(t){let e=document.getElementById(`pointShower_${this.index}`);if(t&&Object.keys(t).length>3){e.style.left=t.left+"px",e.style.top=t.top+"px";let i=document.createElement("template");i.innerHTML=this.getPointTemplate(t),e.innerHTML="",e.append(i.content),e.style.display="block"}else e.innerHTML="",e.style.display="none"}drawBackground(){let t=document.createElement("canvas");t.width=this.chart.width,t.height=40;let e=t.getContext("2d");e.clearRect(0,0,t.width,t.height);let i=[],h=[];if(Object.keys(this.data).length>this.excludedKeys.length+this.defaults.exceptionKeys.length){for(let t in this.data)if(!this.defaults.exceptionKeys.includes(t)&&!this.excludedKeys.includes(t)){let e=Math.max.apply(null,this.data[t].data),s=Math.min.apply(null,this.data[t].data);i.push(e),h.push(s)}for(let s in this.data)if(!this.defaults.exceptionKeys.includes(s)&&!this.excludedKeys.includes(s)){let d=Math.max.apply(null,i),a=Math.min.apply(null,h),n=t.height/(d-a)*.9,r=[],o=this.data[s].data,l=this.data.x.data,c=t.width/l.length;this.kx=c;for(let e=0;e<o.length;e++){let i={x:Math.round(c*e),y:t.height-Math.round(n*(o[e]-a))};r.push(i)}e.strokeStyle=this.data[s].color,e.lineWidth=1,e.moveTo(r[0].x,r[0].y),e.beginPath();for(let t=0;t<r.length;t++)e.lineTo(r[t].x,r[t].y),e.stroke();e.closePath()}}document.getElementById(`range_${this.index}`).style.background=`url(${t.toDataURL()})`}initEvents(){let t=document.getElementById(`range_${this.index}`),e=this;t.addEventListener("mousedown",function(i){i.preventDefault();let h=e.getStrategy(i.target);h&&(t.addEventListener("mousemove",h),t.addEventListener("mouseup",e=>{t.removeEventListener("mousemove",h)}),t.addEventListener("mouseleave",e=>{t.removeEventListener("mousemove",h)}))}),t.addEventListener("touchstart",function(i){let h=e.getStrategy(i.target);h&&(t.addEventListener("touchmove",h),t.addEventListener("touchend",i=>{e.x=!1,t.removeEventListener("touchmove",h)}))}),this.checkBoxes.map(t=>{let i=document.getElementById(`checkbox_${t}_${this.index}`);if(i){let h=!0;i.addEventListener("change",function(i){h?e.excludedKeys.push(t):e.excludedKeys.splice(e.excludedKeys.indexOf(t),1),h=!h})}}),document.getElementById(`checkbox_mode_${this.index}`).addEventListener("change",function(t){e.darkMode=!e.darkMode,this.setAttribute("checked",e.darkMode.toString())});let i=document.getElementById(`chart_${this.index}`),h=document.getElementById(`verticalLine_${this.index}`),s=document.getElementById(`pointsHolder_${this.index}`);i.addEventListener("mouseenter",function(t){h.style.display="block",s.style.display="block"});let d=function(t){let d=t.pageX<i.offsetLeft||t.pageX>i.offsetLeft+i.width,a=t.pageY<i.offsetTop||t.pageY>i.offsetTop+i.height;(d||a||t.changedTouches)&&(h.style.display="none",s.style.display="none",e.showPoint())};i.addEventListener("mouseleave",d),s.addEventListener("mouseleave",d),s.addEventListener("touchend",d),i.addEventListener("touchend",d);let a={};i.addEventListener("mousemove",function(t){if(t.movementX){let d=t.clientX,n=(t.clientY,t.clientX-i.offsetLeft),{start:r,end:o}=e.markers,l=n/i.width*(o-r),c=n/i.width*(o-r)+r,p=e.data.x.data.length*l,x=Math.round(p),u=Math.round(c*e.data.x.data.length),g={left:d+30,top:t.offsetY+i.offsetTop};g.x=e.data.x.data[u],s.innerHTML="";let{max:y,min:m}=e.chartYData;for(let t in e.points){let h=x>0&&x<e.points[t].length-1;if(!e.excludedKeys.includes(t)&&h&&"x"!==t){g[t]=Math.round((i.height-e.points[t][x].y)*(y-m)/e.chart.height);let h=document.createElement("span");h.style.width="20px",h.style.boxSizing="border-box",h.style.height="20px",h.style.borderRadius="100%",h.style.border=`2px solid ${e.data[t].color}`,h.style.position="absolute";let d=a[t]?(a[t]+11-e.points[t][x].y)*(p%1):0;h.style.top=e.points[t][x].y+d-11+"px",h.style.left="-11px",h.style.background=e.chart.darkMode?"#111":"#eee",a[t]=e.points[t][x].y-11,s.appendChild(h)}}h.style.left=d+"px",s.style.left=d+"px",e.showPoint(g)}}),i.addEventListener("touchmove",function(t){t.preventDefault(),h.style.display="block",s.style.display="block";let d=event.touches[0]||event.changedTouches[0],n=d.clientX-i.offsetLeft,r=(d.clientY,d.pageY),{start:o,end:l}=e.markers,c=n/i.width*(l-o),p=n/i.width*(l-o)+o,x=e.data.x.data.length*c,u=Math.round(x),g=Math.round(p*e.data.x.data.length),y={left:n+120,top:r};y.x=e.data.x.data[g],s.innerHTML="";let{max:m,min:f}=e.chartYData;for(let t in e.points){let h=u>0&&u<e.points[t].length-1;if(!e.excludedKeys.includes(t)&&h&&"x"!==t){y[t]=Math.round((i.height-e.points[t][u].y)*(m-f)/e.chart.height);let h=document.createElement("span");h.style.width="20px",h.style.boxSizing="border-box",h.style.height="20px",h.style.borderRadius="100%",h.style.border=`2px solid ${e.data[t].color}`,h.style.position="absolute",h.style.top=e.points[t][u].y-11+"px",h.style.left="-11px",h.style.background=e.chart.darkMode?"#111":"#eee",a[t]=e.points[t][u].y-11,s.appendChild(h)}}h.style.left=n+30+"px",s.style.left=n+30+"px",Object.keys(y).length>3?e.showPoint(y):(h.style.display="none",s.style.display="none",e.showPoint())})}render(){let t=document.getElementById(this.parentElementId);t&&(this.template=document.createElement("template"),this.template.innerHTML=this.getTemplate(),this.setStyles(),t.appendChild(this.template.content),this.calculate(),this.initEvents(),this.drawBackground())}static factory(t,e){t.map((t,i)=>new PLTelegramChart({index:i,parentElementId:e.parentElementId,data:t,chart:{darkMode:e.chart.darkMode,width:e.chart.width,height:e.chart.height,controlsWidth:e.chart.controlsWidth}}).render())}}